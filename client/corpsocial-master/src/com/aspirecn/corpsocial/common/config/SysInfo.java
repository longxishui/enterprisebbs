package com.aspirecn.corpsocial.common.config;import android.content.Context;import android.content.pm.PackageInfo;import android.content.pm.PackageManager;import android.telephony.TelephonyManager;import android.util.DisplayMetrics;import android.view.WindowManager;public class SysInfo {    private static SysInfo instance = new SysInfo();    public Context mContext = null;    /**     * 设备的imei号码     */    private String mImei;    /**     * 设备的网卡编号     */    private String mMacAddr;    /**     * 操作系统平台     */    private String mOsPlatform;    /**     * 操作系统版本     */    private String mOsVersion;    /**     * 屏幕分辨率     */    private String mPixel;    /**     * 屏幕密度     */    private int mDensity;    /**     * 屏幕宽带     */    private int mScreenWidth;    /**     * 屏幕高度     */    private int mScreenHeight;    /**     * 软件的versionName     */    private String mVersionName;    /**     * 软件的versionCode     */    private int mVersionCode;    private SysInfo() {    }    public static SysInfo getInstance() {        return instance;    }    public void init(Context initContext) {        mContext = initContext;        if (null == mContext) {            return;        }        setOs();        setPixel();        setVersion();    }    /**     * 设置系统的信息     */    private void setOs() {        // 部分写死的配置项        mOsPlatform = "android";        // 动态获取的系统参数        TelephonyManager telephonyManager = (TelephonyManager) mContext                .getSystemService(Context.TELEPHONY_SERVICE);        mImei = telephonyManager.getDeviceId();        mOsVersion = telephonyManager.getDeviceSoftwareVersion();    }    /**     * 获取屏幕分辨率需要从 界面获取     */    private void setPixel() {        WindowManager windowManager = (WindowManager) mContext                .getSystemService(Context.WINDOW_SERVICE);        DisplayMetrics metric = new DisplayMetrics();        windowManager.getDefaultDisplay().getMetrics(metric);        mScreenWidth = metric.widthPixels; // 屏幕宽度（像素）        mScreenHeight = metric.heightPixels; // 屏幕高度（像素）        // float density = metric.density; // 屏幕密度（0.75 / 1.0 / 1.5）        mDensity = metric.densityDpi; // 屏幕密度DPI（120 / 160 / 240）        if (mScreenWidth > mScreenHeight) {            mPixel = mScreenWidth + "x" + mScreenHeight;        } else {            mPixel = mScreenHeight + "x" + mScreenWidth;        }    }    /**     * 获取版本号     *     * @return 当前应用的版本号     */    private void setVersion() {        try {            PackageManager manager = mContext.getPackageManager();            PackageInfo info = manager.getPackageInfo(                    mContext.getPackageName(), 0);            mVersionName = info.versionName;            mVersionCode = info.versionCode;        } catch (Exception e) {            e.printStackTrace();        }    }    /**     * 判断是否插入了sim卡     */    public boolean hasSimCard() {        if (mContext == null) {            return false;        }        TelephonyManager manager = (TelephonyManager) mContext                .getSystemService(Context.TELEPHONY_SERVICE);        boolean flag = false;        switch (manager.getSimState()) {            case TelephonyManager.SIM_STATE_ABSENT:            case TelephonyManager.SIM_STATE_NETWORK_LOCKED:            case TelephonyManager.SIM_STATE_PIN_REQUIRED:            case TelephonyManager.SIM_STATE_PUK_REQUIRED:            case TelephonyManager.SIM_STATE_UNKNOWN:                flag = false;                break;            case TelephonyManager.SIM_STATE_READY:                flag = true;                break;        }        return flag;    }    /**     * 检测SDcard是否存在     *     * @return true:存在、false:不存在     */    public boolean checkSDcard() {        return android.os.Environment.getExternalStorageState().equals(                android.os.Environment.MEDIA_MOUNTED);    }    /**     * 获取设备的唯一标示吗     *     * @return     */    public String getImei() {        return mImei;    }    /**     * 获取设备物理地址     *     * @return     */    public String getMacAddr() {        return mMacAddr;    }    /**     * 获取操作系统的名称     *     * @return     */    public String getOsPlatform() {        return mOsPlatform;    }    /**     * 获取操作系统版本     *     * @return     */    public String getOsVersion() {        return mOsVersion;    }    /**     * 获取屏幕像素     *     * @return     */    public String getPixel() {        return mPixel;    }    /**     * 获取屏幕宽度     *     * @return     */    public int getWidth() {        return mScreenWidth;    }    /**     * 获取屏幕高度     *     * @return     */    public int getHeight() {        return mScreenHeight;    }    /**     * 获取屏幕密度     *     * @return     */    public int getDensity() {        return mDensity;    }    /**     * 获取软件的versionCode     *     * @return     */    public int getVersionCode() {        return mVersionCode;    }    /**     * 获取软件的versionName     *     * @return     */    public String getVersionName() {        return mVersionName;    }}